name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  gradle-build:
    name: Gradle build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: product_service_dba
          POSTGRES_PASSWORD: postgres123
          POSTGRES_DB: product-service
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    permissions:
      contents: read

    steps:
     - name: Checkout Code
       uses: actions/checkout@v4

     - name: Set up JDK 21
       uses: actions/setup-java@v4
       with:
        java-version: '21'
        distribution: 'temurin'

     - name: Setup Gradle
       uses: gradle/actions/setup-gradle@v3

     - name: Build with Gradle Wrapper
       run: ./gradlew build
       env:
        POSTGRES_DATABASE_HOST: localhost
        POSTGRES_DATABASE_PORT: 5432
        POSTGRES_DATABASE_USER: product_service_dba
        POSTGRES_DATABASE_PASSWORD: postgres123
        POSTGRES_DATABASE_NAME: product-service
        
  docker-build:
    name: Docker build
    needs: gradle-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
     - name: Checkout Code
       uses: actions/checkout@v4
     - name: Set up JDK 21
       uses: actions/setup-java@v4
       with:
        java-version: '21'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
     - name: Generate and submit dependency graph
       uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
